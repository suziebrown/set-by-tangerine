name: Lighthouse Audit
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  lighthouse:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get preview deployment URL
        id: vercel_preview_url
        uses: zentered/vercel-preview-url@v1.4.0
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_app: "set-by-tangerine"

      - name: Await preview deployment ready
        uses: UnlyEd/github-action-await-vercel@v2.0.0
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ format('https://{0}', steps.vercel_preview_url.outputs.preview_url) }}
          timeout: 420
          poll-interval: 15

      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        run: npx lighthouse-ci ${{ steps.vercel_preview_url.outputs.url }} --extra-headers "{\"x-vercel-protection-bypass\":\"${{ secrets.VERCEL_AUTOMATION_BYPASS_SECRET }}\"}"

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}

            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))

            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')

             core.setOutput("comment", comment);

      - name: Add comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              owner: context.repo.owner,
              issue_number: context.issue.number,
              repo: context.repo.repo,
              body: ${{ steps.format_lighthouse_score.outputs.comment }}
            })
