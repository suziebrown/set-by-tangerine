name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  playwright:
    name: Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm install
      - name: Install browsers
        run: npx playwright install --with-deps
      - name: Build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_IMAGES_BLOB_PREFIX: ${{ secrets.NEXT_PUBLIC_IMAGES_BLOB_PREFIX }}
          NEXT_PUBLIC_PRINT_BLOB_PREFIX: ${{ secrets.NEXT_PUBLIC_PRINT_BLOB_PREFIX }}
        run: npx next build
      - name: Run tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_IMAGES_BLOB_PREFIX: ${{ secrets.NEXT_PUBLIC_IMAGES_BLOB_PREFIX }}
          NEXT_PUBLIC_PRINT_BLOB_PREFIX: ${{ secrets.NEXT_PUBLIC_PRINT_BLOB_PREFIX }}
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  lighthouse:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - name: Add comment to PR
        id: loading_comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            Running Lighthouse audit...

      - name: Wait for Vercel deployment
        uses: UnlyEd/github-action-await-vercel@v1.2.14
        id: await-vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          deployment-url: ${{ github.event.deployment_status.target_url }}
          timeout: 10 # Wait for 10 seconds before failing

      - uses: actions/checkout@v2

      - name: Audit preview URL with Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: |
            ${{ github.event.deployment_status.target_url }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const links = ${{ steps.lighthouse_audit.outputs.links }}

            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))

            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'

            const comment = [
                `‚ö°Ô∏è [Lighthouse report](${Object.values(links)[0]}) for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
                `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
            ].join('\n')

             core.setOutput("comment", comment);

      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
